{"ast":null,"code":"// Simple API client with token support and CRA proxy to http://localhost:4000\nconst API_BASE = ''; // CRA proxy handles /api/* to backend\n\nlet token = null;\nexport const setToken = t => {\n  token = t;\n  if (t) localStorage.setItem('gs_token', t);else localStorage.removeItem('gs_token');\n};\nexport const getToken = () => token || localStorage.getItem('gs_token');\nasync function apiFetch(path, options = {}) {\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(options.headers || {})\n  };\n  const t = getToken();\n  if (t) headers['Authorization'] = `Bearer ${t}`;\n  const res = await fetch(`${API_BASE}${path}`, {\n    ...options,\n    headers\n  });\n  if (!res.ok) {\n    if (res.status === 401) {\n      // For auth endpoints, show the real error (e.g., invalid credentials) and don't clear token blindly\n      if (String(path).startsWith('/api/auth')) {\n        try {\n          const data = await res.json();\n          throw new Error(data.message || 'Invalid credentials');\n        } catch (_) {\n          throw new Error('Invalid credentials');\n        }\n      }\n      // For other endpoints, clear session and prompt re-login\n      try {\n        localStorage.removeItem('gs_user');\n      } catch {}\n      setToken(null);\n      throw new Error('Session expired or invalid. Please login again.');\n    }\n    let msg = `HTTP ${res.status}`;\n    try {\n      const data = await res.json();\n      msg = data.message || JSON.stringify(data);\n    } catch (_) {}\n    throw new Error(msg);\n  }\n  // Try to parse json, fallback to null\n  try {\n    return await res.json();\n  } catch {\n    return null;\n  }\n}\n\n// Auth\nexport const authRegister = payload => apiFetch('/api/auth/register', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const authLogin = payload => apiFetch('/api/auth/login', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const authMe = () => apiFetch('/api/auth/me');\nexport const authLogout = () => apiFetch('/api/auth/logout', {\n  method: 'POST'\n});\n\n// Admin Users\nexport const usersList = () => apiFetch('/api/users');\nexport const usersUpdateRole = (id, role) => apiFetch(`/api/users/${id}/role`, {\n  method: 'PATCH',\n  body: JSON.stringify({\n    role\n  })\n});\n\n// Registrations\nexport const registrationsCreate = payload => apiFetch('/api/registrations', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const registrationsMine = () => apiFetch('/api/registrations/me');\nexport const registrationsList = () => apiFetch('/api/registrations');\n\n// Bookings\nexport const bookingsCreate = payload => apiFetch('/api/bookings', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const bookingsMine = () => apiFetch('/api/bookings/me');\nexport const bookingsList = () => apiFetch('/api/bookings');\n\n// Tools\nexport const toolsCreate = payload => apiFetch('/api/tools', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const toolsMine = () => apiFetch('/api/tools/me');\nexport const toolsList = () => apiFetch('/api/tools');\n\n// Feedback\nexport const feedbackCreate = payload => apiFetch('/api/feedback', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const feedbackMine = () => apiFetch('/api/feedback/me');\nexport const feedbackList = () => apiFetch('/api/feedback');\n\n// Sessions\nexport const sessionsList = ({\n  q = '',\n  status = '',\n  from = '',\n  to = '',\n  page = 1,\n  pageSize = 10\n} = {}) => {\n  const params = new URLSearchParams();\n  if (q) params.set('q', q);\n  if (status) params.set('status', status);\n  if (from) params.set('from', from);\n  if (to) params.set('to', to);\n  params.set('page', String(page));\n  params.set('pageSize', String(pageSize));\n  return apiFetch(`/api/sessions?${params.toString()}`);\n};\nexport const sessionsSummary = () => apiFetch('/api/sessions/summary');","map":{"version":3,"names":["API_BASE","token","setToken","t","localStorage","setItem","removeItem","getToken","getItem","apiFetch","path","options","headers","res","fetch","ok","status","String","startsWith","data","json","Error","message","_","msg","JSON","stringify","authRegister","payload","method","body","authLogin","authMe","authLogout","usersList","usersUpdateRole","id","role","registrationsCreate","registrationsMine","registrationsList","bookingsCreate","bookingsMine","bookingsList","toolsCreate","toolsMine","toolsList","feedbackCreate","feedbackMine","feedbackList","sessionsList","q","from","to","page","pageSize","params","URLSearchParams","set","toString","sessionsSummary"],"sources":["D:/full stacks/Garden/garden-scheduler/src/services/api.js"],"sourcesContent":["// Simple API client with token support and CRA proxy to http://localhost:4000\nconst API_BASE = ''; // CRA proxy handles /api/* to backend\n\nlet token = null;\n\nexport const setToken = (t) => {\n  token = t;\n  if (t) localStorage.setItem('gs_token', t);\n  else localStorage.removeItem('gs_token');\n};\n\nexport const getToken = () => token || localStorage.getItem('gs_token');\n\nasync function apiFetch(path, options = {}) {\n  const headers = { 'Content-Type': 'application/json', ...(options.headers || {}) };\n  const t = getToken();\n  if (t) headers['Authorization'] = `Bearer ${t}`;\n  const res = await fetch(`${API_BASE}${path}`, { ...options, headers });\n  if (!res.ok) {\n    if (res.status === 401) {\n      // For auth endpoints, show the real error (e.g., invalid credentials) and don't clear token blindly\n      if (String(path).startsWith('/api/auth')) {\n        try {\n          const data = await res.json();\n          throw new Error(data.message || 'Invalid credentials');\n        } catch (_) {\n          throw new Error('Invalid credentials');\n        }\n      }\n      // For other endpoints, clear session and prompt re-login\n      try { localStorage.removeItem('gs_user'); } catch {}\n      setToken(null);\n      throw new Error('Session expired or invalid. Please login again.');\n    }\n    let msg = `HTTP ${res.status}`;\n    try {\n      const data = await res.json();\n      msg = data.message || JSON.stringify(data);\n    } catch (_) {}\n    throw new Error(msg);\n  }\n  // Try to parse json, fallback to null\n  try { return await res.json(); } catch { return null; }\n}\n\n// Auth\nexport const authRegister = (payload) => apiFetch('/api/auth/register', {\n  method: 'POST',\n  body: JSON.stringify(payload),\n});\n\nexport const authLogin = (payload) => apiFetch('/api/auth/login', {\n  method: 'POST',\n  body: JSON.stringify(payload),\n});\n\nexport const authMe = () => apiFetch('/api/auth/me');\nexport const authLogout = () => apiFetch('/api/auth/logout', { method: 'POST' });\n\n// Admin Users\nexport const usersList = () => apiFetch('/api/users');\nexport const usersUpdateRole = (id, role) => apiFetch(`/api/users/${id}/role`, {\n  method: 'PATCH',\n  body: JSON.stringify({ role }),\n});\n\n// Registrations\nexport const registrationsCreate = (payload) => apiFetch('/api/registrations', {\n  method: 'POST',\n  body: JSON.stringify(payload),\n});\nexport const registrationsMine = () => apiFetch('/api/registrations/me');\nexport const registrationsList = () => apiFetch('/api/registrations');\n\n// Bookings\nexport const bookingsCreate = (payload) => apiFetch('/api/bookings', {\n  method: 'POST',\n  body: JSON.stringify(payload),\n});\nexport const bookingsMine = () => apiFetch('/api/bookings/me');\nexport const bookingsList = () => apiFetch('/api/bookings');\n\n// Tools\nexport const toolsCreate = (payload) => apiFetch('/api/tools', {\n  method: 'POST',\n  body: JSON.stringify(payload),\n});\nexport const toolsMine = () => apiFetch('/api/tools/me');\nexport const toolsList = () => apiFetch('/api/tools');\n\n// Feedback\nexport const feedbackCreate = (payload) => apiFetch('/api/feedback', {\n  method: 'POST',\n  body: JSON.stringify(payload),\n});\nexport const feedbackMine = () => apiFetch('/api/feedback/me');\nexport const feedbackList = () => apiFetch('/api/feedback');\n\n// Sessions\nexport const sessionsList = ({ q='', status='', from='', to='', page=1, pageSize=10 }={}) => {\n  const params = new URLSearchParams();\n  if (q) params.set('q', q);\n  if (status) params.set('status', status);\n  if (from) params.set('from', from);\n  if (to) params.set('to', to);\n  params.set('page', String(page));\n  params.set('pageSize', String(pageSize));\n  return apiFetch(`/api/sessions?${params.toString()}`);\n}\nexport const sessionsSummary = () => apiFetch('/api/sessions/summary');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}