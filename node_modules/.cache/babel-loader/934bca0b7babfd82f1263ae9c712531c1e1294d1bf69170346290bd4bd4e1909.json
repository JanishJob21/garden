{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stacks\\\\Garden\\\\garden-scheduler\\\\src\\\\components\\\\GoogleLoginButton.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoginButton = () => {\n  _s();\n  const {\n    googleLogin\n  } = useAuth();\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: handleGoogleSignIn,\n          auto_select: false\n        });\n        window.google.accounts.id.renderButton(document.getElementById('googleSignInDiv'), {\n          type: 'standard',\n          theme: 'outline',\n          size: 'large',\n          text: 'signin_with',\n          shape: 'rectangular',\n          width: 250\n        });\n      }\n    };\n    const handleGoogleSignIn = async response => {\n      try {\n        await googleLogin(response.credential);\n      } catch (error) {\n        console.error('Google login failed:', error);\n      }\n    };\n\n    // Load the Google API script\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    script.onload = initializeGoogleSignIn;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [googleLogin]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"googleSignInDiv\",\n    style: {\n      margin: '10px 0'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n_s(GoogleLoginButton, \"6XVweUwvDKZGwnkvjzOb4oJ4R+c=\", false, function () {\n  return [useAuth];\n});\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["useEffect","useAuth","jsxDEV","_jsxDEV","GoogleLoginButton","_s","googleLogin","initializeGoogleSignIn","window","google","accounts","id","initialize","client_id","process","env","REACT_APP_GOOGLE_CLIENT_ID","callback","handleGoogleSignIn","auto_select","renderButton","document","getElementById","type","theme","size","text","shape","width","response","credential","error","console","script","createElement","src","async","defer","onload","body","appendChild","removeChild","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/full stacks/Garden/garden-scheduler/src/components/GoogleLoginButton.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\n\nconst GoogleLoginButton = () => {\n  const { googleLogin } = useAuth();\n\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: handleGoogleSignIn,\n          auto_select: false,\n        });\n\n        window.google.accounts.id.renderButton(\n          document.getElementById('googleSignInDiv'),\n          {\n            type: 'standard',\n            theme: 'outline',\n            size: 'large',\n            text: 'signin_with',\n            shape: 'rectangular',\n            width: 250,\n          }\n        );\n      }\n    };\n\n    const handleGoogleSignIn = async (response) => {\n      try {\n        await googleLogin(response.credential);\n      } catch (error) {\n        console.error('Google login failed:', error);\n      }\n    };\n\n    // Load the Google API script\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    script.onload = initializeGoogleSignIn;\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [googleLogin]);\n\n  return <div id=\"googleSignInDiv\" style={{ margin: '10px 0' }} />;\n};\n\nexport default GoogleLoginButton;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAY,CAAC,GAAGL,OAAO,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMO,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,MAAM,CAACC,MAAM,EAAE;QACjBD,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;UACnCC,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;UACjDC,QAAQ,EAAEC,kBAAkB;UAC5BC,WAAW,EAAE;QACf,CAAC,CAAC;QAEFX,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACS,YAAY,CACpCC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,EAC1C;UACEC,IAAI,EAAE,UAAU;UAChBC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,aAAa;UACnBC,KAAK,EAAE,aAAa;UACpBC,KAAK,EAAE;QACT,CACF,CAAC;MACH;IACF,CAAC;IAED,MAAMV,kBAAkB,GAAG,MAAOW,QAAQ,IAAK;MAC7C,IAAI;QACF,MAAMvB,WAAW,CAACuB,QAAQ,CAACC,UAAU,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;;IAED;IACA,MAAME,MAAM,GAAGZ,QAAQ,CAACa,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,GAAG,GAAG,wCAAwC;IACrDF,MAAM,CAACG,KAAK,GAAG,IAAI;IACnBH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,MAAM,GAAG/B,sBAAsB;IACtCc,QAAQ,CAACkB,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IAEjC,OAAO,MAAM;MACXZ,QAAQ,CAACkB,IAAI,CAACE,WAAW,CAACR,MAAM,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,CAAC3B,WAAW,CAAC,CAAC;EAEjB,oBAAOH,OAAA;IAAKQ,EAAE,EAAC,iBAAiB;IAAC+B,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAS;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClE,CAAC;AAAC1C,EAAA,CAhDID,iBAAiB;EAAA,QACGH,OAAO;AAAA;AAAA+C,EAAA,GAD3B5C,iBAAiB;AAkDvB,eAAeA,iBAAiB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}