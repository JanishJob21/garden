{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stacks\\\\Garden\\\\garden-scheduler\\\\src\\\\components\\\\GoogleLoginButton.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoginButton = () => {\n  _s();\n  const {\n    googleLogin,\n    isAuthenticated\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // If already authenticated, redirect to dashboard\n    if (isAuthenticated) {\n      navigate('/dashboard');\n      return;\n    }\n    const handleGoogleSignIn = async response => {\n      if (!response || !response.credential) {\n        setError('Failed to authenticate with Google. Please try again.');\n        setIsLoading(false);\n        return;\n      }\n      try {\n        setIsLoading(true);\n        setError('');\n        await googleLogin(response.credential);\n        // Navigation after successful login is handled by the auth context\n      } catch (error) {\n        console.error('Google login failed:', error);\n        setError(error.message || 'Failed to sign in with Google. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const initializeGoogleSignIn = () => {\n      if (!window.google || !window.google.accounts) {\n        console.error('Google API not loaded');\n        setError('Failed to load Google Sign-In. Please refresh the page.');\n        return;\n      }\n      try {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: handleGoogleSignIn,\n          auto_select: false,\n          ux_mode: 'popup'\n        });\n        window.google.accounts.id.renderButton(document.getElementById('googleSignInDiv'), {\n          type: 'standard',\n          theme: 'outline',\n          size: 'large',\n          text: 'signin_with',\n          shape: 'rectangular',\n          width: 250,\n          logo_alignment: 'center'\n        });\n      } catch (error) {\n        console.error('Error initializing Google Sign-In:', error);\n        setError('Failed to initialize Google Sign-In. Please try again.');\n      }\n    };\n\n    // Load Google API script\n    if (!window.google) {\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      script.onload = initializeGoogleSignIn;\n      script.onerror = () => {\n        setError('Failed to load Google Sign-In. Please check your connection.');\n      };\n      document.body.appendChild(script);\n      return () => {\n        document.body.removeChild(script);\n      };\n    } else {\n      initializeGoogleSignIn();\n    }\n  }, [googleLogin, isAuthenticated, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Signing in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"googleSignInDiv\",\n      style: {\n        margin: '10px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLoginButton, \"cPUjw49FBf/v930D035C07fI7bM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["useState","useEffect","useAuth","useNavigate","jsxDEV","_jsxDEV","GoogleLoginButton","_s","googleLogin","isAuthenticated","isLoading","setIsLoading","error","setError","navigate","handleGoogleSignIn","response","credential","console","message","initializeGoogleSignIn","window","google","accounts","id","initialize","client_id","process","env","REACT_APP_GOOGLE_CLIENT_ID","callback","auto_select","ux_mode","renderButton","document","getElementById","type","theme","size","text","shape","width","logo_alignment","script","createElement","src","async","defer","onload","onerror","body","appendChild","removeChild","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","margin","_c","$RefreshReg$"],"sources":["D:/full stacks/Garden/garden-scheduler/src/components/GoogleLoginButton.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst GoogleLoginButton = () => {\n  const { googleLogin, isAuthenticated } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // If already authenticated, redirect to dashboard\n    if (isAuthenticated) {\n      navigate('/dashboard');\n      return;\n    }\n\n    const handleGoogleSignIn = async (response) => {\n      if (!response || !response.credential) {\n        setError('Failed to authenticate with Google. Please try again.');\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        setError('');\n        await googleLogin(response.credential);\n        // Navigation after successful login is handled by the auth context\n      } catch (error) {\n        console.error('Google login failed:', error);\n        setError(error.message || 'Failed to sign in with Google. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const initializeGoogleSignIn = () => {\n      if (!window.google || !window.google.accounts) {\n        console.error('Google API not loaded');\n        setError('Failed to load Google Sign-In. Please refresh the page.');\n        return;\n      }\n\n      try {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: handleGoogleSignIn,\n          auto_select: false,\n          ux_mode: 'popup',\n        });\n\n        window.google.accounts.id.renderButton(\n          document.getElementById('googleSignInDiv'),\n          {\n            type: 'standard',\n            theme: 'outline',\n            size: 'large',\n            text: 'signin_with',\n            shape: 'rectangular',\n            width: 250,\n            logo_alignment: 'center',\n          }\n        );\n      } catch (error) {\n        console.error('Error initializing Google Sign-In:', error);\n        setError('Failed to initialize Google Sign-In. Please try again.');\n      }\n    };\n\n    // Load Google API script\n    if (!window.google) {\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      script.onload = initializeGoogleSignIn;\n      script.onerror = () => {\n        setError('Failed to load Google Sign-In. Please check your connection.');\n      };\n      document.body.appendChild(script);\n\n      return () => {\n        document.body.removeChild(script);\n      };\n    } else {\n      initializeGoogleSignIn();\n    }\n  }, [googleLogin, isAuthenticated, navigate]);\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      {isLoading && <p>Signing in...</p>}\n      {error && <p style={{ color: 'red', marginBottom: '10px' }}>{error}</p>}\n      <div id=\"googleSignInDiv\" style={{ margin: '10px 0' }} />\n    </div>\n  );\n};\n\nexport default GoogleLoginButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}