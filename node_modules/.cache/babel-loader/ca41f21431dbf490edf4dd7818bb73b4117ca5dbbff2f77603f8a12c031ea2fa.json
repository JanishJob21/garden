{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stacks\\\\Garden\\\\garden-scheduler\\\\src\\\\pages\\\\reports\\\\PlantingTrendsReport.jsx\";\nimport { BookingsAPI } from '../../services/gardenService.js';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlantingTrendsReport() {\n  const bookings = BookingsAPI.list();\n  const byCrop = bookings.reduce((acc, b) => {\n    if (!b.cropType) return acc;\n    acc[b.cropType] = (acc[b.cropType] || 0) + 1;\n    return acc;\n  }, {});\n  const data = Object.entries(byCrop).map(([crop, count]) => ({\n    crop,\n    count\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Planting Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 320,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            allowDecimals: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = PlantingTrendsReport;\nvar _c;\n$RefreshReg$(_c, \"PlantingTrendsReport\");","map":{"version":3,"names":["BookingsAPI","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","PlantingTrendsReport","bookings","list","byCrop","reduce","acc","b","cropType","data","Object","entries","map","crop","count","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","strokeDasharray","dataKey","allowDecimals","type","_c","$RefreshReg$"],"sources":["D:/full stacks/Garden/garden-scheduler/src/pages/reports/PlantingTrendsReport.jsx"],"sourcesContent":["import { BookingsAPI } from '../../services/gardenService.js'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'\n\nexport default function PlantingTrendsReport() {\n  const bookings = BookingsAPI.list()\n  const byCrop = bookings.reduce((acc,b)=>{\n    if (!b.cropType) return acc\n    acc[b.cropType] = (acc[b.cropType]||0) + 1\n    return acc\n  }, {})\n  const data = Object.entries(byCrop).map(([crop,count])=>({ crop, count }))\n\n  return (\n    <div>\n      <h2>Planting Trends</h2>\n      <div className=\"chart\">\n        <ResponsiveContainer width=\"100%\" height={320}>\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"crop\" /><YAxis allowDecimals={false} />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"count\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErG,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAC7C,MAAMC,QAAQ,GAAGX,WAAW,CAACY,IAAI,CAAC,CAAC;EACnC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAACC,CAAC,KAAG;IACtC,IAAI,CAACA,CAAC,CAACC,QAAQ,EAAE,OAAOF,GAAG;IAC3BA,GAAG,CAACC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAACF,GAAG,CAACC,CAAC,CAACC,QAAQ,CAAC,IAAE,CAAC,IAAI,CAAC;IAC1C,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,MAAMG,IAAI,GAAGC,MAAM,CAACC,OAAO,CAACP,MAAM,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACC,IAAI,EAACC,KAAK,CAAC,MAAI;IAAED,IAAI;IAAEC;EAAM,CAAC,CAAC,CAAC;EAE1E,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnB,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAAL,QAAA,eACpBf,OAAA,CAACF,mBAAmB;QAACuB,KAAK,EAAC,MAAM;QAACC,MAAM,EAAE,GAAI;QAAAP,QAAA,eAC5Cf,OAAA,CAACR,SAAS;UAACiB,IAAI,EAAEA,IAAK;UAAAM,QAAA,gBACpBf,OAAA,CAACJ,aAAa;YAAC2B,eAAe,EAAC;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCnB,OAAA,CAACN,KAAK;YAAC8B,OAAO,EAAC;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAAAnB,OAAA,CAACL,KAAK;YAAC8B,aAAa,EAAE;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvDnB,OAAA,CAACH,OAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXnB,OAAA,CAACP,IAAI;YAACiC,IAAI,EAAC,UAAU;YAACF,OAAO,EAAC;UAAO;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACQ,EAAA,GAxBuB1B,oBAAoB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}