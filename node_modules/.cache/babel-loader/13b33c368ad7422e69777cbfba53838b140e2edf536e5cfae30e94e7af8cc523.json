{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stacks\\\\Garden\\\\garden-scheduler\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { seedIfEmpty } from '../data/seed.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(() => {\n    const raw = localStorage.getItem('gs_user');\n    return raw ? JSON.parse(raw) : null;\n  });\n  useEffect(() => {\n    seedIfEmpty();\n  }, []);\n  const login = ({\n    email,\n    password\n  }) => {\n    const users = JSON.parse(localStorage.getItem('gs_users') || '[]');\n    const found = users.find(u => u.email === email && u.password === password);\n    if (!found) throw new Error('Invalid credentials');\n    localStorage.setItem('gs_user', JSON.stringify(found));\n    setUser(found);\n  };\n  const signup = ({\n    name,\n    email,\n    password,\n    role\n  }) => {\n    const users = JSON.parse(localStorage.getItem('gs_users') || '[]');\n    if (users.some(u => u.email === email)) throw new Error('User already exists');\n    const newUser = {\n      id: crypto.randomUUID(),\n      name,\n      email,\n      password,\n      role\n    };\n    const next = [...users, newUser];\n    localStorage.setItem('gs_users', JSON.stringify(next));\n    localStorage.setItem('gs_user', JSON.stringify(newUser));\n    setUser(newUser);\n  };\n  const logout = () => {\n    localStorage.removeItem('gs_user');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"s5zOqZ3fIqF0lIz3Zh5wfUzhnXo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","seedIfEmpty","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","raw","localStorage","getItem","JSON","parse","login","email","password","users","found","find","u","Error","setItem","stringify","signup","name","role","some","newUser","id","crypto","randomUUID","next","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/full stacks/Garden/garden-scheduler/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react'\nimport { seedIfEmpty } from '../data/seed.js'\n\nconst AuthContext = createContext(null)\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(() => {\n    const raw = localStorage.getItem('gs_user')\n    return raw ? JSON.parse(raw) : null\n  })\n\n  useEffect(() => {\n    seedIfEmpty()\n  }, [])\n\n  const login = ({ email, password }) => {\n    const users = JSON.parse(localStorage.getItem('gs_users') || '[]')\n    const found = users.find(u => u.email === email && u.password === password)\n    if (!found) throw new Error('Invalid credentials')\n    localStorage.setItem('gs_user', JSON.stringify(found))\n    setUser(found)\n  }\n\n  const signup = ({ name, email, password, role }) => {\n    const users = JSON.parse(localStorage.getItem('gs_users') || '[]')\n    if (users.some(u => u.email === email)) throw new Error('User already exists')\n    const newUser = { id: crypto.randomUUID(), name, email, password, role }\n    const next = [...users, newUser]\n    localStorage.setItem('gs_users', JSON.stringify(next))\n    localStorage.setItem('gs_user', JSON.stringify(newUser))\n    setUser(newUser)\n  }\n\n  const logout = () => {\n    localStorage.removeItem('gs_user')\n    setUser(null)\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, login, signup, logout }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}