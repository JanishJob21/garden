{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stacks\\\\Garden\\\\garden-scheduler\\\\src\\\\components\\\\GoogleSignIn.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleSignIn = () => {\n  _s();\n  const {\n    googleLogin\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // This function will be called when the Google Sign-In button is clicked\n    const handleGoogleSignIn = async response => {\n      try {\n        await googleLogin(response.credential);\n        navigate('/dashboard');\n      } catch (error) {\n        console.error('Google login failed:', error);\n        alert('Google login failed. Please try again.');\n      }\n    };\n\n    // Initialize Google Sign-In\n    const initializeGoogleSignIn = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: handleGoogleSignIn\n        });\n\n        // Render the button\n        window.google.accounts.id.renderButton(document.getElementById('googleSignInDiv'), {\n          type: 'standard',\n          theme: 'outline',\n          size: 'large',\n          text: 'signin_with',\n          shape: 'rectangular',\n          width: 250\n        });\n\n        // Also show the One Tap prompt\n        window.google.accounts.id.prompt();\n      }\n    };\n\n    // Add a small delay to ensure the Google API is loaded\n    const timer = setTimeout(() => {\n      initializeGoogleSignIn();\n    }, 1000);\n\n    // Cleanup function\n    return () => clearTimeout(timer);\n  }, [googleLogin, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"google-signin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"googleSignInDiv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSignIn, \"nqF2TKOUPqPMsVmMRoCvxGsXd0s=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = GoogleSignIn;\nexport default GoogleSignIn;\nvar _c;\n$RefreshReg$(_c, \"GoogleSignIn\");","map":{"version":3,"names":["useEffect","useAuth","useNavigate","jsxDEV","_jsxDEV","GoogleSignIn","_s","googleLogin","navigate","handleGoogleSignIn","response","credential","error","console","alert","initializeGoogleSignIn","window","google","accounts","id","initialize","client_id","process","env","REACT_APP_GOOGLE_CLIENT_ID","callback","renderButton","document","getElementById","type","theme","size","text","shape","width","prompt","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/full stacks/Garden/garden-scheduler/src/components/GoogleSignIn.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst GoogleSignIn = () => {\n  const { googleLogin } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // This function will be called when the Google Sign-In button is clicked\n    const handleGoogleSignIn = async (response) => {\n      try {\n        await googleLogin(response.credential);\n        navigate('/dashboard');\n      } catch (error) {\n        console.error('Google login failed:', error);\n        alert('Google login failed. Please try again.');\n      }\n    };\n\n    // Initialize Google Sign-In\n    const initializeGoogleSignIn = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: handleGoogleSignIn,\n        });\n\n        // Render the button\n        window.google.accounts.id.renderButton(\n          document.getElementById('googleSignInDiv'),\n          {\n            type: 'standard',\n            theme: 'outline',\n            size: 'large',\n            text: 'signin_with',\n            shape: 'rectangular',\n            width: 250,\n          }\n        );\n\n        // Also show the One Tap prompt\n        window.google.accounts.id.prompt();\n      }\n    };\n\n    // Add a small delay to ensure the Google API is loaded\n    const timer = setTimeout(() => {\n      initializeGoogleSignIn();\n    }, 1000);\n\n    // Cleanup function\n    return () => clearTimeout(timer);\n  }, [googleLogin, navigate]);\n\n  return (\n    <div className=\"google-signin-container\">\n      <div id=\"googleSignInDiv\"></div>\n    </div>\n  );\n};\n\nexport default GoogleSignIn;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAY,CAAC,GAAGN,OAAO,CAAC,CAAC;EACjC,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;MAC7C,IAAI;QACF,MAAMH,WAAW,CAACG,QAAQ,CAACC,UAAU,CAAC;QACtCH,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CE,KAAK,CAAC,wCAAwC,CAAC;MACjD;IACF,CAAC;;IAED;IACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,MAAM,CAACC,MAAM,EAAE;QACjBD,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;UACnCC,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;UACjDC,QAAQ,EAAEhB;QACZ,CAAC,CAAC;;QAEF;QACAO,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACO,YAAY,CACpCC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,EAC1C;UACEC,IAAI,EAAE,UAAU;UAChBC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,aAAa;UACnBC,KAAK,EAAE,aAAa;UACpBC,KAAK,EAAE;QACT,CACF,CAAC;;QAED;QACAlB,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACgB,MAAM,CAAC,CAAC;MACpC;IACF,CAAC;;IAED;IACA,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BtB,sBAAsB,CAAC,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMuB,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAAC7B,WAAW,EAAEC,QAAQ,CAAC,CAAC;EAE3B,oBACEJ,OAAA;IAAKmC,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtCpC,OAAA;MAAKe,EAAE,EAAC;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACtC,EAAA,CAxDID,YAAY;EAAA,QACQJ,OAAO,EACdC,WAAW;AAAA;AAAA2C,EAAA,GAFxBxC,YAAY;AA0DlB,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}