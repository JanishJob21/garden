{"ast":null,"code":"var _jsxFileName = \"D:\\\\full stacks\\\\Garden\\\\garden-scheduler\\\\src\\\\pages\\\\admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { usersList, sessionsList, sessionsSummary } from '../../services/api';\nimport { IconUsers as UsersIcon, IconCalendar as CalendarIcon, IconTools as ToolsIcon, IconFeedback as FeedbackIcon, IconEye as ActivityIcon, IconRefresh as RefreshIcon, IconSearch as SearchIcon, IconArrowRight as ArrowRightIcon } from '../../components/Icons';\nimport '../../styles/dashboard.css';\n\n// Helper function to format relative time\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatRelativeTime = dateString => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  if (diffInSeconds < 60) return 'just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} mins ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  return date.toLocaleDateString();\n};\nconst MetricCard = ({\n  icon,\n  title,\n  value = 0,\n  change,\n  isIncrease\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"metric-card\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-icon\",\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-value\",\n      children: typeof value === 'number' ? value.toLocaleString() : '0'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), change !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `metric-change ${isIncrease ? 'increase' : 'decrease'}`,\n      children: [isIncrease ? 'â†‘' : 'â†“', \" \", change, \"% from last month\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this);\n_c = MetricCard;\nexport default function AdminDashboard() {\n  _s();\n  const [metrics, setMetrics] = useState({\n    totalUsers: 0,\n    activeSessions: 0,\n    totalSessions: 0,\n    totalBookings: 0,\n    totalTools: 0\n  });\n  const [recentSessions, setRecentSessions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchDashboardData = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      // Fetch all data in parallel\n      const [users, sessions, summary] = await Promise.all([usersList(), sessionsList({\n        page: 1,\n        pageSize: 5\n      }), sessionsSummary()]);\n\n      // Get the current user from local storage\n      const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n      console.log('Current user from localStorage:', currentUser);\n      const usersData = users.users || [];\n      const sessionsData = sessions.items || [];\n      const summaryData = summary || {};\n\n      // Log detailed user and session info for debugging\n      console.log('All users:', usersData);\n      console.log('Current sessions:', sessionsData);\n\n      // Update metrics with fallback to 0 for all values\n      setMetrics({\n        totalUsers: (usersData === null || usersData === void 0 ? void 0 : usersData.length) || 0,\n        activeSessions: (summaryData === null || summaryData === void 0 ? void 0 : summaryData.active) || 0,\n        totalSessions: (summaryData === null || summaryData === void 0 ? void 0 : summaryData.total) || 0,\n        totalBookings: 0,\n        // You'll need to implement this if needed\n        totalTools: 0 // You'll need to implement this if needed\n      });\n\n      // Format recent sessions with proper user identification and status\n      const formattedSessions = sessionsData.map(session => {\n        try {\n          var _currentUser$email;\n          // Get user details with proper fallbacks\n          const userData = session.user || {};\n          const userId = userData._id || session.userId || 'unknown';\n\n          // Get user info with fallbacks\n          const userEmail = (userData.email || '').toLowerCase();\n          const userName = userData.name || userEmail.split('@')[0] || 'User';\n\n          // Get role - prioritize session role, then user role, then check email for admin\n          let role = session.role || userData.role || 'member';\n\n          // Enhanced role detection - check email and name for admin indicators\n          if (userEmail === 'admin@example.com' || userEmail.includes('admin') || userName.toLowerCase().includes('admin')) {\n            role = 'admin';\n          }\n\n          // Set display name with appropriate emoji based on role\n          let displayName = '';\n          switch (role.toLowerCase()) {\n            case 'admin':\n              displayName = `ðŸ‘‘ ${userName}`;\n              break;\n            case 'manager':\n              displayName = `ðŸ‘” ${userName}`;\n              break;\n            default:\n              displayName = `ðŸ‘¤ ${userName}`;\n          }\n\n          // Calculate session status - more accurate status detection\n          const lastActive = session.lastActive ? new Date(session.lastActive) : new Date(session.createdAt || new Date());\n          const fifteenMinutesAgo = new Date(Date.now() - 15 * 60 * 1000);\n\n          // Check if session is active based on multiple factors\n          let isActive = false;\n          if (session.status) {\n            isActive = session.status.toLowerCase() === 'active' && lastActive > fifteenMinutesAgo;\n          } else {\n            // If no explicit status, use last activity time\n            isActive = lastActive > fifteenMinutesAgo;\n          }\n\n          // Get action based on session type if available\n          const action = session.action || (isActive ? 'is active' : 'was active');\n\n          // Get the current user from localStorage for comparison\n          const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n          const isCurrentUser = currentUser && (currentUser._id === userId || ((_currentUser$email = currentUser.email) === null || _currentUser$email === void 0 ? void 0 : _currentUser$email.toLowerCase()) === userEmail);\n\n          // If this is the current user's session, ensure it shows as active\n          if (isCurrentUser) {\n            isActive = true;\n            role = currentUser.role || role; // Use the role from current session\n          }\n          return {\n            id: session._id || `session-${Math.random().toString(36).substr(2, 9)}`,\n            user: displayName,\n            action: action,\n            time: formatRelativeTime(lastActive),\n            status: isActive ? 'active' : 'offline',\n            role: role,\n            lastActive: lastActive,\n            isCurrentUser: isCurrentUser,\n            // Add flag for current user\n            rawData: session // Keep original data for debugging\n          };\n        } catch (error) {\n          console.error('Error processing session:', error, session);\n          return null;\n        }\n      });\n\n      // Filter out any null sessions and sort by lastActive in descending order (newest first)\n      const validSessions = formattedSessions.filter(session => session !== null);\n      validSessions.sort((a, b) => b.lastActive - a.lastActive);\n\n      // Log the processed sessions for debugging\n      console.log('Processed sessions:', validSessions);\n      setRecentSessions(validSessions);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchDashboardData();\n  }, [fetchDashboardData]);\n  const handleRefresh = async () => {\n    setLoading(true);\n    try {\n      await fetchDashboardData();\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefresh,\n          className: \"p-2 rounded-full hover:bg-gray-100 transition-colors\",\n          disabled: loading,\n          title: \"Refresh data\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: `w-5 h-5 ${loading ? 'animate-spin' : ''}`,\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: /*#__PURE__*/_jsxDEV(UsersIcon, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this),\n        title: \"Total Users\",\n        value: metrics.totalUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: /*#__PURE__*/_jsxDEV(ActivityIcon, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this),\n        title: \"Active Sessions\",\n        value: metrics.activeSessions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: /*#__PURE__*/_jsxDEV(CalendarIcon, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }, this),\n        title: \"Total Sessions\",\n        value: metrics.totalSessions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        icon: /*#__PURE__*/_jsxDEV(ToolsIcon, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this),\n        title: \"Active Now\",\n        value: metrics.activeSessions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: '32px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleRefresh,\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(RefreshIcon, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), \" Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Login Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Logout Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: recentSessions.map(session => {\n              if (!session) return null;\n\n              // Get user data with fallbacks\n              const userData = session.user || {};\n              const email = userData.email || 'N/A';\n              const username = userData.name || email.split('@')[0] || 'User';\n              const loginTime = session.lastActive || new Date();\n              const isActive = session.status === 'active';\n\n              // Format duration\n              const formatDuration = () => {\n                if (!session.lastActive) return '-';\n                const diff = Math.floor((new Date() - new Date(session.lastActive)) / 1000);\n                if (diff < 60) return `${diff}s`;\n                const mins = Math.floor(diff / 60);\n                const secs = diff % 60;\n                return `${mins}m ${secs}s`;\n              };\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(loginTime).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: isActive ? '-' : new Date(session.logoutTime || '').toLocaleString() || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDuration()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `chip ${isActive ? 'chip-success' : 'chip-muted'}`,\n                    children: isActive ? 'Active' : 'Inactive'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this)]\n              }, session.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sessions Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-text active\",\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-text\",\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-text\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-chart\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sessions chart will be displayed here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"yHJk2RzfkdBdq/DQspxF0BJpFV8=\");\n_c2 = AdminDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"MetricCard\");\n$RefreshReg$(_c2, \"AdminDashboard\");","map":{"version":3,"names":["useEffect","useState","useCallback","Link","usersList","sessionsList","sessionsSummary","IconUsers","UsersIcon","IconCalendar","CalendarIcon","IconTools","ToolsIcon","IconFeedback","FeedbackIcon","IconEye","ActivityIcon","IconRefresh","RefreshIcon","IconSearch","SearchIcon","IconArrowRight","ArrowRightIcon","jsxDEV","_jsxDEV","formatRelativeTime","dateString","date","Date","now","diffInSeconds","Math","floor","toLocaleDateString","MetricCard","icon","title","value","change","isIncrease","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","undefined","_c","AdminDashboard","_s","metrics","setMetrics","totalUsers","activeSessions","totalSessions","totalBookings","totalTools","recentSessions","setRecentSessions","loading","setLoading","fetchDashboardData","users","sessions","summary","Promise","all","page","pageSize","currentUser","JSON","parse","localStorage","getItem","console","log","usersData","sessionsData","items","summaryData","length","active","total","formattedSessions","map","session","_currentUser$email","userData","user","userId","_id","userEmail","email","toLowerCase","userName","name","split","role","includes","displayName","lastActive","createdAt","fifteenMinutesAgo","isActive","status","action","isCurrentUser","id","random","toString","substr","time","rawData","error","validSessions","filter","sort","a","b","handleRefresh","onClick","disabled","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","size","style","marginBottom","username","loginTime","formatDuration","diff","mins","secs","logoutTime","_c2","$RefreshReg$"],"sources":["D:/full stacks/Garden/garden-scheduler/src/pages/admin/AdminDashboard.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { \n  usersList,\n  sessionsList,\n  sessionsSummary\n} from '../../services/api';\nimport { \n  IconUsers as UsersIcon, \n  IconCalendar as CalendarIcon, \n  IconTools as ToolsIcon, \n  IconFeedback as FeedbackIcon, \n  IconEye as ActivityIcon,\n  IconRefresh as RefreshIcon,\n  IconSearch as SearchIcon,\n  IconArrowRight as ArrowRightIcon\n} from '../../components/Icons';\nimport '../../styles/dashboard.css';\n\n// Helper function to format relative time\nconst formatRelativeTime = (dateString) => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  \n  if (diffInSeconds < 60) return 'just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} mins ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  return date.toLocaleDateString();\n};\n\nconst MetricCard = ({ icon, title, value = 0, change, isIncrease }) => (\n  <div className=\"metric-card\">\n    <div className=\"metric-icon\">{icon}</div>\n    <div className=\"metric-content\">\n      <div className=\"metric-title\">{title}</div>\n      <div className=\"metric-value\">\n        {typeof value === 'number' ? value.toLocaleString() : '0'}\n      </div>\n      {change !== undefined && (\n        <div className={`metric-change ${isIncrease ? 'increase' : 'decrease'}`}>\n          {isIncrease ? 'â†‘' : 'â†“'} {change}% from last month\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport default function AdminDashboard() {\n  const [metrics, setMetrics] = useState({\n    totalUsers: 0,\n    activeSessions: 0,\n    totalSessions: 0,\n    totalBookings: 0,\n    totalTools: 0,\n  });\n  \n  const [recentSessions, setRecentSessions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchDashboardData = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      // Fetch all data in parallel\n      const [users, sessions, summary] = await Promise.all([\n        usersList(),\n        sessionsList({ page: 1, pageSize: 5 }),\n        sessionsSummary(),\n      ]);\n      \n      // Get the current user from local storage\n      const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n      console.log('Current user from localStorage:', currentUser);\n      \n      const usersData = users.users || [];\n      const sessionsData = sessions.items || [];\n      const summaryData = summary || {};\n\n      // Log detailed user and session info for debugging\n      console.log('All users:', usersData);\n      console.log('Current sessions:', sessionsData);\n\n      // Update metrics with fallback to 0 for all values\n      setMetrics({\n        totalUsers: usersData?.length || 0,\n        activeSessions: summaryData?.active || 0,\n        totalSessions: summaryData?.total || 0,\n        totalBookings: 0, // You'll need to implement this if needed\n        totalTools: 0,    // You'll need to implement this if needed\n      });\n\n      // Format recent sessions with proper user identification and status\n      const formattedSessions = sessionsData.map(session => {\n        try {\n          // Get user details with proper fallbacks\n          const userData = session.user || {};\n          const userId = userData._id || session.userId || 'unknown';\n          \n          // Get user info with fallbacks\n          const userEmail = (userData.email || '').toLowerCase();\n          const userName = userData.name || userEmail.split('@')[0] || 'User';\n          \n          // Get role - prioritize session role, then user role, then check email for admin\n          let role = session.role || userData.role || 'member';\n          \n          // Enhanced role detection - check email and name for admin indicators\n          if (userEmail === 'admin@example.com' || \n              userEmail.includes('admin') || \n              userName.toLowerCase().includes('admin')) {\n            role = 'admin';\n          }\n          \n          // Set display name with appropriate emoji based on role\n          let displayName = '';\n          switch(role.toLowerCase()) {\n            case 'admin':\n              displayName = `ðŸ‘‘ ${userName}`;\n              break;\n            case 'manager':\n              displayName = `ðŸ‘” ${userName}`;\n              break;\n            default:\n              displayName = `ðŸ‘¤ ${userName}`;\n          }\n\n          // Calculate session status - more accurate status detection\n          const lastActive = session.lastActive ? new Date(session.lastActive) : new Date(session.createdAt || new Date());\n          const fifteenMinutesAgo = new Date(Date.now() - 15 * 60 * 1000);\n          \n          // Check if session is active based on multiple factors\n          let isActive = false;\n          if (session.status) {\n            isActive = session.status.toLowerCase() === 'active' && lastActive > fifteenMinutesAgo;\n          } else {\n            // If no explicit status, use last activity time\n            isActive = lastActive > fifteenMinutesAgo;\n          }\n          \n          // Get action based on session type if available\n          const action = session.action || (isActive ? 'is active' : 'was active');\n          \n          // Get the current user from localStorage for comparison\n          const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n          const isCurrentUser = currentUser && (currentUser._id === userId || \n                                              currentUser.email?.toLowerCase() === userEmail);\n          \n          // If this is the current user's session, ensure it shows as active\n          if (isCurrentUser) {\n            isActive = true;\n            role = currentUser.role || role; // Use the role from current session\n          }\n          \n          return {\n            id: session._id || `session-${Math.random().toString(36).substr(2, 9)}`,\n            user: displayName,\n            action: action,\n            time: formatRelativeTime(lastActive),\n            status: isActive ? 'active' : 'offline',\n            role: role,\n            lastActive: lastActive,\n            isCurrentUser: isCurrentUser, // Add flag for current user\n            rawData: session // Keep original data for debugging\n          };\n        } catch (error) {\n          console.error('Error processing session:', error, session);\n          return null;\n        }\n      });\n      \n      // Filter out any null sessions and sort by lastActive in descending order (newest first)\n      const validSessions = formattedSessions.filter(session => session !== null);\n      validSessions.sort((a, b) => b.lastActive - a.lastActive);\n\n      // Log the processed sessions for debugging\n      console.log('Processed sessions:', validSessions);\n      \n      setRecentSessions(validSessions);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, [fetchDashboardData]);\n\n  const handleRefresh = async () => {\n    setLoading(true);\n    try {\n      await fetchDashboardData();\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <div className=\"flex items-center gap-4\">\n          <h1>Dashboard</h1>\n          <button \n            onClick={handleRefresh}\n            className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n            disabled={loading}\n            title=\"Refresh data\"\n          >\n            <svg \n              className={`w-5 h-5 ${loading ? 'animate-spin' : ''}`} \n              fill=\"none\" \n              viewBox=\"0 0 24 24\" \n              stroke=\"currentColor\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" \n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"metrics-grid\">\n        <MetricCard \n          icon={<UsersIcon size={24} />} \n          title=\"Total Users\" \n          value={metrics.totalUsers} \n        />\n        <MetricCard \n          icon={<ActivityIcon size={24} />} \n          title=\"Active Sessions\" \n          value={metrics.activeSessions}\n        />\n        <MetricCard \n          icon={<CalendarIcon size={24} />} \n          title=\"Total Sessions\" \n          value={metrics.totalSessions}\n        />\n        <MetricCard \n          icon={<ToolsIcon size={24} />} \n          title=\"Active Now\" \n          value={metrics.activeSessions}\n        />\n      </div>\n\n      <div className=\"card\" style={{ marginBottom: '32px' }}>\n        <div className=\"section-header\">\n          <h2>Recent Activity</h2>\n          <button className=\"btn\" onClick={handleRefresh} disabled={loading}>\n            <RefreshIcon size={16} /> Refresh\n          </button>\n        </div>\n        <div className=\"table-wrap\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Username</th>\n                <th>Email</th>\n                <th>Login Time</th>\n                <th>Logout Time</th>\n                <th>Duration</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {recentSessions.map((session) => {\n                if (!session) return null;\n                \n                // Get user data with fallbacks\n                const userData = session.user || {};\n                const email = userData.email || 'N/A';\n                const username = userData.name || email.split('@')[0] || 'User';\n                const loginTime = session.lastActive || new Date();\n                const isActive = session.status === 'active';\n                \n                // Format duration\n                const formatDuration = () => {\n                  if (!session.lastActive) return '-';\n                  const diff = Math.floor((new Date() - new Date(session.lastActive)) / 1000);\n                  if (diff < 60) return `${diff}s`;\n                  const mins = Math.floor(diff / 60);\n                  const secs = diff % 60;\n                  return `${mins}m ${secs}s`;\n                };\n\n                return (\n                  <tr key={session.id}>\n                    <td>{username}</td>\n                    <td>{email}</td>\n                    <td>{new Date(loginTime).toLocaleString()}</td>\n                    <td>{isActive ? '-' : new Date(session.logoutTime || '').toLocaleString() || '-'}</td>\n                    <td>{formatDuration()}</td>\n                    <td>\n                      <span className={`chip ${isActive ? 'chip-success' : 'chip-muted'}`}>\n                        {isActive ? 'Active' : 'Inactive'}\n                      </span>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div className=\"dashboard-section\">\n        <div className=\"section-header\">\n          <h2>Sessions Overview</h2>\n          <div className=\"time-filter\">\n            <button className=\"btn-text active\">Today</button>\n            <button className=\"btn-text\">Week</button>\n            <button className=\"btn-text\">Month</button>\n          </div>\n        </div>\n        <div className=\"sessions-chart\">\n          <div className=\"chart-placeholder\">\n            <p>Sessions chart will be displayed here</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SACEC,SAAS,EACTC,YAAY,EACZC,eAAe,QACV,oBAAoB;AAC3B,SACEC,SAAS,IAAIC,SAAS,EACtBC,YAAY,IAAIC,YAAY,EAC5BC,SAAS,IAAIC,SAAS,EACtBC,YAAY,IAAIC,YAAY,EAC5BC,OAAO,IAAIC,YAAY,EACvBC,WAAW,IAAIC,WAAW,EAC1BC,UAAU,IAAIC,UAAU,EACxBC,cAAc,IAAIC,cAAc,QAC3B,wBAAwB;AAC/B,OAAO,4BAA4B;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;EACzC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,MAAMG,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;EACtB,MAAME,aAAa,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,GAAGF,IAAI,IAAI,IAAI,CAAC;EAErD,IAAIG,aAAa,GAAG,EAAE,EAAE,OAAO,UAAU;EACzC,IAAIA,aAAa,GAAG,IAAI,EAAE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACF,aAAa,GAAG,EAAE,CAAC,WAAW;EAC7E,IAAIA,aAAa,GAAG,KAAK,EAAE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACF,aAAa,GAAG,IAAI,CAAC,YAAY;EACjF,IAAIA,aAAa,GAAG,MAAM,EAAE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACF,aAAa,GAAG,KAAK,CAAC,WAAW;EAClF,OAAOH,IAAI,CAACM,kBAAkB,CAAC,CAAC;AAClC,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,KAAK,GAAG,CAAC;EAAEC,MAAM;EAAEC;AAAW,CAAC,kBAChEf,OAAA;EAAKgB,SAAS,EAAC,aAAa;EAAAC,QAAA,gBAC1BjB,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAEN;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eACzCrB,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3CrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B,OAAOJ,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACS,cAAc,CAAC,CAAC,GAAG;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,EACLP,MAAM,KAAKS,SAAS,iBACnBvB,OAAA;MAAKgB,SAAS,EAAE,iBAAiBD,UAAU,GAAG,UAAU,GAAG,UAAU,EAAG;MAAAE,QAAA,GACrEF,UAAU,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC,EAACD,MAAM,EAAC,mBACnC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;AAACG,EAAA,GAfId,UAAU;AAiBhB,eAAe,SAASe,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnD,QAAQ,CAAC;IACrCoD,UAAU,EAAE,CAAC;IACbC,cAAc,EAAE,CAAC;IACjBC,aAAa,EAAE,CAAC;IAChBC,aAAa,EAAE,CAAC;IAChBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2D,OAAO,EAAEC,UAAU,CAAC,GAAG5D,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM6D,kBAAkB,GAAG5D,WAAW,CAAC,YAAY;IACjD,IAAI;MACF2D,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAM,CAACE,KAAK,EAAEC,QAAQ,EAAEC,OAAO,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnD/D,SAAS,CAAC,CAAC,EACXC,YAAY,CAAC;QAAE+D,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAE,CAAC,CAAC,EACtC/D,eAAe,CAAC,CAAC,CAClB,CAAC;;MAEF;MACA,MAAMgE,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;MACpEC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEN,WAAW,CAAC;MAE3D,MAAMO,SAAS,GAAGd,KAAK,CAACA,KAAK,IAAI,EAAE;MACnC,MAAMe,YAAY,GAAGd,QAAQ,CAACe,KAAK,IAAI,EAAE;MACzC,MAAMC,WAAW,GAAGf,OAAO,IAAI,CAAC,CAAC;;MAEjC;MACAU,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,SAAS,CAAC;MACpCF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,YAAY,CAAC;;MAE9C;MACA1B,UAAU,CAAC;QACTC,UAAU,EAAE,CAAAwB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,MAAM,KAAI,CAAC;QAClC3B,cAAc,EAAE,CAAA0B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,MAAM,KAAI,CAAC;QACxC3B,aAAa,EAAE,CAAAyB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,KAAK,KAAI,CAAC;QACtC3B,aAAa,EAAE,CAAC;QAAE;QAClBC,UAAU,EAAE,CAAC,CAAK;MACpB,CAAC,CAAC;;MAEF;MACA,MAAM2B,iBAAiB,GAAGN,YAAY,CAACO,GAAG,CAACC,OAAO,IAAI;QACpD,IAAI;UAAA,IAAAC,kBAAA;UACF;UACA,MAAMC,QAAQ,GAAGF,OAAO,CAACG,IAAI,IAAI,CAAC,CAAC;UACnC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,GAAG,IAAIL,OAAO,CAACI,MAAM,IAAI,SAAS;;UAE1D;UACA,MAAME,SAAS,GAAG,CAACJ,QAAQ,CAACK,KAAK,IAAI,EAAE,EAAEC,WAAW,CAAC,CAAC;UACtD,MAAMC,QAAQ,GAAGP,QAAQ,CAACQ,IAAI,IAAIJ,SAAS,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM;;UAEnE;UACA,IAAIC,IAAI,GAAGZ,OAAO,CAACY,IAAI,IAAIV,QAAQ,CAACU,IAAI,IAAI,QAAQ;;UAEpD;UACA,IAAIN,SAAS,KAAK,mBAAmB,IACjCA,SAAS,CAACO,QAAQ,CAAC,OAAO,CAAC,IAC3BJ,QAAQ,CAACD,WAAW,CAAC,CAAC,CAACK,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC5CD,IAAI,GAAG,OAAO;UAChB;;UAEA;UACA,IAAIE,WAAW,GAAG,EAAE;UACpB,QAAOF,IAAI,CAACJ,WAAW,CAAC,CAAC;YACvB,KAAK,OAAO;cACVM,WAAW,GAAG,MAAML,QAAQ,EAAE;cAC9B;YACF,KAAK,SAAS;cACZK,WAAW,GAAG,MAAML,QAAQ,EAAE;cAC9B;YACF;cACEK,WAAW,GAAG,MAAML,QAAQ,EAAE;UAClC;;UAEA;UACA,MAAMM,UAAU,GAAGf,OAAO,CAACe,UAAU,GAAG,IAAIzE,IAAI,CAAC0D,OAAO,CAACe,UAAU,CAAC,GAAG,IAAIzE,IAAI,CAAC0D,OAAO,CAACgB,SAAS,IAAI,IAAI1E,IAAI,CAAC,CAAC,CAAC;UAChH,MAAM2E,iBAAiB,GAAG,IAAI3E,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;;UAE/D;UACA,IAAI2E,QAAQ,GAAG,KAAK;UACpB,IAAIlB,OAAO,CAACmB,MAAM,EAAE;YAClBD,QAAQ,GAAGlB,OAAO,CAACmB,MAAM,CAACX,WAAW,CAAC,CAAC,KAAK,QAAQ,IAAIO,UAAU,GAAGE,iBAAiB;UACxF,CAAC,MAAM;YACL;YACAC,QAAQ,GAAGH,UAAU,GAAGE,iBAAiB;UAC3C;;UAEA;UACA,MAAMG,MAAM,GAAGpB,OAAO,CAACoB,MAAM,KAAKF,QAAQ,GAAG,WAAW,GAAG,YAAY,CAAC;;UAExE;UACA,MAAMlC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;UACpE,MAAMiC,aAAa,GAAGrC,WAAW,KAAKA,WAAW,CAACqB,GAAG,KAAKD,MAAM,IAC5B,EAAAH,kBAAA,GAAAjB,WAAW,CAACuB,KAAK,cAAAN,kBAAA,uBAAjBA,kBAAA,CAAmBO,WAAW,CAAC,CAAC,MAAKF,SAAS,CAAC;;UAEnF;UACA,IAAIe,aAAa,EAAE;YACjBH,QAAQ,GAAG,IAAI;YACfN,IAAI,GAAG5B,WAAW,CAAC4B,IAAI,IAAIA,IAAI,CAAC,CAAC;UACnC;UAEA,OAAO;YACLU,EAAE,EAAEtB,OAAO,CAACK,GAAG,IAAI,WAAW5D,IAAI,CAAC8E,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACvEtB,IAAI,EAAEW,WAAW;YACjBM,MAAM,EAAEA,MAAM;YACdM,IAAI,EAAEvF,kBAAkB,CAAC4E,UAAU,CAAC;YACpCI,MAAM,EAAED,QAAQ,GAAG,QAAQ,GAAG,SAAS;YACvCN,IAAI,EAAEA,IAAI;YACVG,UAAU,EAAEA,UAAU;YACtBM,aAAa,EAAEA,aAAa;YAAE;YAC9BM,OAAO,EAAE3B,OAAO,CAAC;UACnB,CAAC;QACH,CAAC,CAAC,OAAO4B,KAAK,EAAE;UACdvC,OAAO,CAACuC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,EAAE5B,OAAO,CAAC;UAC1D,OAAO,IAAI;QACb;MACF,CAAC,CAAC;;MAEF;MACA,MAAM6B,aAAa,GAAG/B,iBAAiB,CAACgC,MAAM,CAAC9B,OAAO,IAAIA,OAAO,KAAK,IAAI,CAAC;MAC3E6B,aAAa,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAClB,UAAU,GAAGiB,CAAC,CAACjB,UAAU,CAAC;;MAEzD;MACA1B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEuC,aAAa,CAAC;MAEjDxD,iBAAiB,CAACwD,aAAa,CAAC;IAClC,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdvC,OAAO,CAACuC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,SAAS;MACRrD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN7D,SAAS,CAAC,MAAM;IACd8D,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAExB,MAAM0D,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC3D,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMC,kBAAkB,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOoD,KAAK,EAAE;MACdvC,OAAO,CAACuC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRrD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACErC,OAAA;IAAKgB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCjB,OAAA;MAAKgB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BjB,OAAA;QAAKgB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCjB,OAAA;UAAAiB,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBrB,OAAA;UACEiG,OAAO,EAAED,aAAc;UACvBhF,SAAS,EAAC,sDAAsD;UAChEkF,QAAQ,EAAE9D,OAAQ;UAClBxB,KAAK,EAAC,cAAc;UAAAK,QAAA,eAEpBjB,OAAA;YACEgB,SAAS,EAAE,WAAWoB,OAAO,GAAG,cAAc,GAAG,EAAE,EAAG;YACtD+D,IAAI,EAAC,MAAM;YACXC,OAAO,EAAC,WAAW;YACnBC,MAAM,EAAC,cAAc;YAAApF,QAAA,eAErBjB,OAAA;cACEsG,aAAa,EAAC,OAAO;cACrBC,cAAc,EAAC,OAAO;cACtBC,WAAW,EAAE,CAAE;cACfC,CAAC,EAAC;YAA6G;cAAAvF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjB,OAAA,CAACU,UAAU;QACTC,IAAI,eAAEX,OAAA,CAAChB,SAAS;UAAC0H,IAAI,EAAE;QAAG;UAAAxF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAC9BT,KAAK,EAAC,aAAa;QACnBC,KAAK,EAAEc,OAAO,CAACE;MAAW;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFrB,OAAA,CAACU,UAAU;QACTC,IAAI,eAAEX,OAAA,CAACR,YAAY;UAACkH,IAAI,EAAE;QAAG;UAAAxF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACjCT,KAAK,EAAC,iBAAiB;QACvBC,KAAK,EAAEc,OAAO,CAACG;MAAe;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFrB,OAAA,CAACU,UAAU;QACTC,IAAI,eAAEX,OAAA,CAACd,YAAY;UAACwH,IAAI,EAAE;QAAG;UAAAxF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACjCT,KAAK,EAAC,gBAAgB;QACtBC,KAAK,EAAEc,OAAO,CAACI;MAAc;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFrB,OAAA,CAACU,UAAU;QACTC,IAAI,eAAEX,OAAA,CAACZ,SAAS;UAACsH,IAAI,EAAE;QAAG;UAAAxF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAC9BT,KAAK,EAAC,YAAY;QAClBC,KAAK,EAAEc,OAAO,CAACG;MAAe;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrB,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAC2F,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAA3F,QAAA,gBACpDjB,OAAA;QAAKgB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjB,OAAA;UAAAiB,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBrB,OAAA;UAAQgB,SAAS,EAAC,KAAK;UAACiF,OAAO,EAAED,aAAc;UAACE,QAAQ,EAAE9D,OAAQ;UAAAnB,QAAA,gBAChEjB,OAAA,CAACN,WAAW;YAACgH,IAAI,EAAE;UAAG;YAAAxF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,YAC3B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNrB,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBjB,OAAA;UAAOgB,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACtBjB,OAAA;YAAAiB,QAAA,eACEjB,OAAA;cAAAiB,QAAA,gBACEjB,OAAA;gBAAAiB,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBrB,OAAA;gBAAAiB,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdrB,OAAA;gBAAAiB,QAAA,EAAI;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnBrB,OAAA;gBAAAiB,QAAA,EAAI;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBrB,OAAA;gBAAAiB,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBrB,OAAA;gBAAAiB,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRrB,OAAA;YAAAiB,QAAA,EACGiB,cAAc,CAAC2B,GAAG,CAAEC,OAAO,IAAK;cAC/B,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI;;cAEzB;cACA,MAAME,QAAQ,GAAGF,OAAO,CAACG,IAAI,IAAI,CAAC,CAAC;cACnC,MAAMI,KAAK,GAAGL,QAAQ,CAACK,KAAK,IAAI,KAAK;cACrC,MAAMwC,QAAQ,GAAG7C,QAAQ,CAACQ,IAAI,IAAIH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM;cAC/D,MAAMqC,SAAS,GAAGhD,OAAO,CAACe,UAAU,IAAI,IAAIzE,IAAI,CAAC,CAAC;cAClD,MAAM4E,QAAQ,GAAGlB,OAAO,CAACmB,MAAM,KAAK,QAAQ;;cAE5C;cACA,MAAM8B,cAAc,GAAGA,CAAA,KAAM;gBAC3B,IAAI,CAACjD,OAAO,CAACe,UAAU,EAAE,OAAO,GAAG;gBACnC,MAAMmC,IAAI,GAAGzG,IAAI,CAACC,KAAK,CAAC,CAAC,IAAIJ,IAAI,CAAC,CAAC,GAAG,IAAIA,IAAI,CAAC0D,OAAO,CAACe,UAAU,CAAC,IAAI,IAAI,CAAC;gBAC3E,IAAImC,IAAI,GAAG,EAAE,EAAE,OAAO,GAAGA,IAAI,GAAG;gBAChC,MAAMC,IAAI,GAAG1G,IAAI,CAACC,KAAK,CAACwG,IAAI,GAAG,EAAE,CAAC;gBAClC,MAAME,IAAI,GAAGF,IAAI,GAAG,EAAE;gBACtB,OAAO,GAAGC,IAAI,KAAKC,IAAI,GAAG;cAC5B,CAAC;cAED,oBACElH,OAAA;gBAAAiB,QAAA,gBACEjB,OAAA;kBAAAiB,QAAA,EAAK4F;gBAAQ;kBAAA3F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACnBrB,OAAA;kBAAAiB,QAAA,EAAKoD;gBAAK;kBAAAnD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAChBrB,OAAA;kBAAAiB,QAAA,EAAK,IAAIb,IAAI,CAAC0G,SAAS,CAAC,CAACxF,cAAc,CAAC;gBAAC;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC/CrB,OAAA;kBAAAiB,QAAA,EAAK+D,QAAQ,GAAG,GAAG,GAAG,IAAI5E,IAAI,CAAC0D,OAAO,CAACqD,UAAU,IAAI,EAAE,CAAC,CAAC7F,cAAc,CAAC,CAAC,IAAI;gBAAG;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtFrB,OAAA;kBAAAiB,QAAA,EAAK8F,cAAc,CAAC;gBAAC;kBAAA7F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC3BrB,OAAA;kBAAAiB,QAAA,eACEjB,OAAA;oBAAMgB,SAAS,EAAE,QAAQgE,QAAQ,GAAG,cAAc,GAAG,YAAY,EAAG;oBAAA/D,QAAA,EACjE+D,QAAQ,GAAG,QAAQ,GAAG;kBAAU;oBAAA9D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC;cAAA,GAVEyC,OAAO,CAACsB,EAAE;gBAAAlE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAWf,CAAC;YAET,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrB,OAAA;MAAKgB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCjB,OAAA;QAAKgB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjB,OAAA;UAAAiB,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BrB,OAAA;UAAKgB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BjB,OAAA;YAAQgB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClDrB,OAAA;YAAQgB,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1CrB,OAAA;YAAQgB,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNrB,OAAA;QAAKgB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BjB,OAAA;UAAKgB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAChCjB,OAAA;YAAAiB,QAAA,EAAG;UAAqC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACK,EAAA,CAxRuBD,cAAc;AAAA2F,GAAA,GAAd3F,cAAc;AAAA,IAAAD,EAAA,EAAA4F,GAAA;AAAAC,YAAA,CAAA7F,EAAA;AAAA6F,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}