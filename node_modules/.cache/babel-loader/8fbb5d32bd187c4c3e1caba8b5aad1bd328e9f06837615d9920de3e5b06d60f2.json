{"ast":null,"code":"export const storage = {\n  get(key, fallback) {\n    return JSON.parse(localStorage.getItem(key) || JSON.stringify(fallback));\n  },\n  set(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const UsersAPI = {\n  list: () => storage.get('gs_users', []),\n  updateRole: (id, role) => {\n    const users = storage.get('gs_users', []);\n    const next = users.map(u => u.id === id ? {\n      ...u,\n      role\n    } : u);\n    storage.set('gs_users', next);\n    return next;\n  }\n};\nexport const PlotsAPI = {\n  list: () => storage.get('gs_plots', [])\n};\nexport const BookingsAPI = {\n  list: () => storage.get('gs_bookings', []),\n  create: booking => {\n    const all = storage.get('gs_bookings', []);\n    const next = [...all, {\n      ...booking,\n      id: crypto.randomUUID(),\n      createdAt: new Date().toISOString()\n    }];\n    storage.set('gs_bookings', next);\n    return next;\n  },\n  update: (id, patch) => {\n    const all = storage.get('gs_bookings', []);\n    const next = all.map(b => b.id === id ? {\n      ...b,\n      ...patch\n    } : b);\n    storage.set('gs_bookings', next);\n    return next;\n  },\n  byUser: userId => storage.get('gs_bookings', []).filter(b => b.userId === userId)\n};\nexport const FeedbackAPI = {\n  list: () => storage.get('gs_feedback', []),\n  create: fb => {\n    const all = storage.get('gs_feedback', []);\n    const next = [...all, {\n      ...fb,\n      id: crypto.randomUUID(),\n      createdAt: new Date().toISOString()\n    }];\n    storage.set('gs_feedback', next);\n    return next;\n  }\n};","map":{"version":3,"names":["storage","get","key","fallback","JSON","parse","localStorage","getItem","stringify","set","value","setItem","UsersAPI","list","updateRole","id","role","users","next","map","u","PlotsAPI","BookingsAPI","create","booking","all","crypto","randomUUID","createdAt","Date","toISOString","update","patch","b","byUser","userId","filter","FeedbackAPI","fb"],"sources":["D:/full stacks/Garden/garden-scheduler/src/services/gardenService.js"],"sourcesContent":["export const storage = {\n  get(key, fallback) { return JSON.parse(localStorage.getItem(key) || JSON.stringify(fallback)) },\n  set(key, value) { localStorage.setItem(key, JSON.stringify(value)) },\n}\n\nexport const UsersAPI = {\n  list: () => storage.get('gs_users', []),\n  updateRole: (id, role) => {\n    const users = storage.get('gs_users', [])\n    const next = users.map(u => u.id===id? {...u, role}: u)\n    storage.set('gs_users', next)\n    return next\n  }\n}\n\nexport const PlotsAPI = {\n  list: () => storage.get('gs_plots', []),\n}\n\nexport const BookingsAPI = {\n  list: () => storage.get('gs_bookings', []),\n  create: (booking) => {\n    const all = storage.get('gs_bookings', [])\n    const next = [...all, { ...booking, id: crypto.randomUUID(), createdAt: new Date().toISOString() }]\n    storage.set('gs_bookings', next); return next\n  },\n  update: (id, patch) => {\n    const all = storage.get('gs_bookings', [])\n    const next = all.map(b => b.id===id? {...b, ...patch}: b)\n    storage.set('gs_bookings', next); return next\n  },\n  byUser: (userId) => storage.get('gs_bookings', []).filter(b => b.userId===userId),\n}\n\nexport const FeedbackAPI = {\n  list: () => storage.get('gs_feedback', []),\n  create: (fb) => {\n    const all = storage.get('gs_feedback', [])\n    const next = [...all, { ...fb, id: crypto.randomUUID(), createdAt: new Date().toISOString() }]\n    storage.set('gs_feedback', next); return next\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}